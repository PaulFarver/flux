// Code generated by vfsgen; DO NOT EDIT.

package install

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// templates statically implements the virtual filesystem provided to vfsgen.
var templates = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
		},
		"/flux-account.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "flux-account.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 836,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\x4b\xaf\xd3\x30\x10\x85\xf7\xfe\x15\x47\xba\x8b\x0b\xe8\x26\xa8\x3b\x94\x5d\xdb\x05\x0b\x10\x8b\xf0\xd8\x20\x16\x63\x7b\x42\x4d\x5d\x3b\xf2\x23\x3c\xa2\xfc\x77\x94\xa4\x95\x9a\xb6\x20\x55\xba\x3b\x7b\x7c\xc6\x73\xe6\xe8\x2b\x8a\x42\x3c\xe0\xd3\x8e\x11\x39\x74\x46\x31\x48\x29\x9f\x5d\x7a\x82\xb2\x39\x26\x0e\x08\xde\x72\x7c\x02\x39\xbd\x28\x41\x1a\xa7\x8d\xfb\x0e\x0a\x2c\x1e\xe0\x9d\xfd\x0d\xc7\xac\x59\xa3\xf1\x01\xef\xb2\xe4\xe0\x38\x71\xc4\x4f\x93\x76\x53\x4b\x21\x29\xb2\x1e\x27\x70\x8c\x50\xde\xa5\xe0\x2d\x5e\xd4\x9b\xf5\xf6\x65\x29\xa8\x35\x5f\x38\x44\xe3\x5d\x85\x6e\x25\xf6\xc6\xe9\x0a\x1f\x67\x57\xeb\xd9\x94\x38\x70\x22\x4d\x89\x2a\x01\x58\x92\x6c\xe3\x78\x02\x1c\x1d\xb8\x42\x63\xf3\x2f\x71\x7e\xe9\x7b\x98\x06\xe5\x07\x3a\x70\x6c\x49\x31\x86\xe1\xf8\x3e\x5d\x2b\xf4\xfd\xf2\xb5\xef\xc1\x4e\x0f\x83\x18\x73\x39\x37\x14\x24\xa9\x92\x72\xda\xf9\x60\xfe\x50\x32\xde\x95\xfb\x37\xb1\x34\xfe\x75\xb7\x92\x9c\xe8\xe4\x77\x3b\x27\x54\x7b\xcb\xf7\x9a\x15\x21\x5b\x9e\x24\x05\xa8\x35\x6f\x83\xcf\x6d\xac\xf0\xf5\xf1\xd5\xe3\xb7\xa9\x2f\x70\xf4\x39\x28\x5e\x14\x3b\x0e\xf2\xac\x50\xc0\x79\x57\x1f\x85\x9f\xeb\xf7\xff\xd6\x3e\xc3\x86\x9b\x99\x80\xfb\x17\xf5\x96\x6b\x6e\x46\xd1\x69\xd1\xff\xcc\x17\xc0\x75\xb6\x8b\xff\x62\x96\x3f\x58\xa5\x63\x76\x37\xc1\xb9\xb2\x73\x89\xc1\x25\x27\xb7\xc8\xb0\x71\x3c\x69\x6e\x28\xdb\x34\xa3\x32\x12\xf5\x37\x00\x00\xff\xff\xfd\x7f\x67\x6a\x44\x03\x00\x00"),
		},
		"/flux-deployment.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "flux-deployment.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 6943,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x59\xdd\x6f\x1b\x37\x12\x7f\xf7\x5f\x31\x50\x0e\x48\x0c\x48\x2b\xbb\x6e\x8b\xc3\xf6\x5c\x5c\x9a\x0f\x37\x97\x26\x35\xec\xf8\x0e\x7d\xaa\x29\xee\x48\x4b\x88\x4b\xee\x71\xb8\x52\x05\xa1\xff\xfb\x61\xc8\xfd\xe0\xca\xb2\x5d\xe4\xed\xf2\x10\x4b\xe4\x70\x38\xdf\xf3\xe3\x68\x36\x9b\x9d\x88\x5a\xfd\x1b\x1d\x29\x6b\x72\x10\x75\x4d\xf3\xcd\xf9\xc9\x5a\x99\x22\x87\xb7\x58\x6b\xbb\xab\xd0\xf8\x93\x0a\xbd\x28\x84\x17\xf9\x09\x80\x11\x15\xe6\xb0\xd4\xcd\x1f\xfb\x3d\xa8\x25\x64\x9f\x45\x85\x54\x0b\x89\xf0\xe7\x9f\xed\x7e\xf8\x9a\xc3\x7e\x3f\xde\xdd\xef\x01\x4d\xc1\x64\x54\xa3\x64\x66\x0e\x6b\xad\xa4\xa0\x1c\xce\x4f\x00\x08\x35\x4a\x6f\x1d\xef\x00\x54\xc2\xcb\xf2\x17\xb1\x40\x4d\x71\x21\xbd\x9b\xa9\xbd\x13\x1e\x57\xbb\xb8\xe9\x77\x35\xe6\x70\x83\xd2\xa1\xf0\x78\x02\xe0\xb1\xaa\xb5\xf0\xd8\x32\x4b\x34\xe0\x7f\xc2\x18\xeb\x85\x57\xd6\xf4\xcc\x01\x6a\x67\x2b\xf4\x25\x36\x94\x29\x3b\xaf\xad\xf3\x39\x4c\x2e\xce\x2e\xce\x27\xf0\x02\x3c\x6a\x9d\x50\x80\xb7\x40\xd2\x89\x1a\x61\x5e\xa1\x77\x4a\x12\x2b\x57\x5b\x65\xfc\x4b\x02\x3e\x9c\xb5\x8c\xf5\x48\x87\x03\x2d\x00\x3a\x5b\x84\xcf\xe8\x36\x4a\xe2\x6b\x29\x6d\x63\xfc\xe7\x31\x21\xc0\xc6\xea\xa6\xc2\x9e\xd5\xac\x65\xb5\x52\x7e\xb6\xc6\x5d\x7f\x01\xb1\x15\xfc\x70\x61\xb7\x32\xf0\x9b\xf1\x91\x22\x38\x38\xa1\x2a\x70\x29\x1a\xed\x3f\xd9\x02\x73\x38\xfb\xf6\xec\x0c\x5e\xc0\xb6\x44\x03\x15\x4b\x83\x05\x38\x14\xc5\xcc\x1a\xbd\x9b\xc2\x16\x61\x6b\xcd\x4b\x0f\x0b\x04\xb1\xd0\xc8\xf6\x90\x65\x65\x8b\x93\x96\xe1\x0b\xf8\x52\x2a\x02\x45\x20\xc0\x57\xf5\x92\xa0\x21\x2c\x60\x69\x1d\xac\xd0\xa0\x13\x5e\x99\x15\xdc\xde\xfe\x0c\x6b\xdc\x51\x06\x1f\x0c\x7c\xfc\x3b\xc1\x8f\x97\x70\x9e\x9d\x9f\x4d\x7b\x2e\xdd\xdd\x51\x05\x02\xe1\x30\x95\x83\x2c\x8b\x62\x10\x0b\x10\x40\x58\x0b\x0e\x8a\xd6\x50\xb0\xc5\x9e\x8d\x14\x06\xb6\x4e\x79\x16\x34\x3b\x6e\xbf\x15\x9a\xde\x18\x58\xd5\x7e\xf7\x56\xb9\xd4\x88\x15\x16\xaa\xa9\x72\xf8\x84\x95\x75\xbb\x54\x4f\x84\xa5\xd5\xda\x6e\x59\xa3\xf6\x6a\x45\x41\xd5\x86\x78\x4d\x80\x6c\xc8\xdb\x4a\xb1\x05\xd6\xc6\x6e\xcd\xef\xa5\x25\x4f\x3d\x8b\xa5\xd2\x38\x85\x6d\xa9\x64\x09\x3b\xdb\xc0\x56\x69\x1d\x95\xf2\x16\x0a\xcb\x79\xc6\xcb\x7c\x88\x3f\x38\xb0\x5b\xc3\x62\xf7\x0c\x1c\xd6\x16\x9c\xf0\x25\x3a\xf0\xa5\x30\xed\xc5\x2b\xe5\xcb\x66\x01\x96\x17\x11\xb4\x5a\x63\x06\xbf\xd9\xe6\xa5\xd6\x20\x34\xd9\xee\x8a\xb1\xb1\x41\x79\x50\xc6\xdb\x70\x46\x5a\xe3\x85\x32\xe8\xa6\xb0\x40\x6d\xb7\x19\xdc\xe2\x60\xd5\xd2\xfb\x9a\xf2\xf9\xbc\xb0\x92\x32\x0e\x2c\x59\x70\xea\xa0\x99\x73\xea\x91\x9f\xaf\x1a\x55\x20\xcd\x1b\xc2\x59\xed\xd4\x46\x78\x0c\xa1\xc7\x8a\x64\xa5\xaf\x74\xcf\xa9\xf3\x05\x51\x39\x93\xd6\x2c\xd5\xaa\xdf\x02\x88\x0b\x9f\x44\x9d\x27\x8b\x69\x22\xcd\x92\x63\x5f\xeb\x97\x6c\xdd\x2c\x70\x1e\x99\x0c\xe1\xf7\xac\x4f\xb6\x8a\x4a\x5e\x29\xc5\x06\x41\x40\xa1\x96\x4b\x74\x5c\x34\x3b\x0e\x6d\x56\x0d\x85\x31\xb8\x20\xb2\x4b\x9d\xc0\xc5\x65\xa3\x0a\xec\xcc\xbe\x54\xab\x4a\xd4\x83\x20\xca\x97\x20\x0c\xa0\xf1\x6e\x17\x74\xb8\x8f\x44\xf7\x53\x10\xa6\x80\xc6\x48\x5b\x71\xb5\x0e\xe7\xa3\xb6\x9f\x82\x3b\x85\x29\x7a\x2e\x68\x36\x81\x83\x42\x6a\xfd\xf9\xc0\x03\x6c\x86\xaf\xf0\x40\x72\xec\x59\x0f\x84\x4a\xe0\x2d\xa8\x8a\xeb\x24\x5c\x5d\x5f\x85\x22\x00\xaf\x58\x2d\x52\x2b\xa3\xcc\x70\x39\x2b\xb7\x41\xa7\x96\x4a\x86\x82\x0d\x75\xe3\x6a\x4b\x48\xa7\x7f\xc1\x90\x3d\x97\x58\x3e\xa2\x15\xd9\x40\x7c\xdf\x5f\x30\x1c\x08\xb7\x1a\xd2\xf4\x11\x8b\xad\xea\x15\xd7\x0f\x4a\x4c\x33\x2e\xc1\x2f\x1e\x29\xc2\x0f\xcf\x1d\x29\xc2\x9d\x39\xfb\x4c\x7c\x50\xff\x93\x0e\xd1\x5a\xdd\x61\xa8\x93\xc6\xc2\x24\x8f\x99\x38\x01\x55\x89\x15\xc6\xe8\xe7\x03\x19\xbc\x57\xa6\x08\x3a\x57\x5c\x56\x1c\xca\x21\x6a\x63\x49\xd1\x28\x08\xb9\x78\x84\xa3\xec\x04\xc6\x09\x20\x7c\x9f\xf7\x65\xb3\xc8\x0a\x2b\xd7\xe8\x32\x69\xab\xb9\x9b\xc7\x1a\x10\xfe\xcc\xbd\xe8\x4d\xd7\xf9\x91\xfb\x3d\x63\x01\xbe\xd5\x8b\x15\xb0\xa4\x59\x4f\x13\xae\xc9\xa1\x65\xa8\x6c\xca\x2d\x3f\xcf\xce\xbf\xcb\xce\xc6\xb4\xd7\x8d\xd6\xd7\x56\x2b\xb9\xcb\xe1\xc3\xf2\xb3\xf5\xd7\x0e\x29\xd5\xc2\x21\xd9\xc6\x49\xa4\xb4\x8e\x3b\xfc\x6f\x83\xe4\x47\x6b\x00\xb2\x6e\x72\xf8\xee\xac\x1a\x2d\x56\xa1\xd4\xe7\xf0\xfd\xb7\x9f\xd4\x00\x13\xac\x4b\x0f\xcf\x06\xcf\x5c\x07\xc8\x70\x71\x76\xc1\x9d\x53\x99\xa5\x75\x55\x08\x59\xa1\x7b\x6a\xad\x36\x68\x90\xe8\xda\xd9\x05\xa6\x12\xb0\x49\xaf\xc6\x5d\x3b\x5e\x15\x19\x8e\x97\x85\x2f\x73\x98\x8b\x5a\x45\x4b\x6f\xbe\x9f\xab\x02\x8d\x57\x7e\x97\xd5\xcd\x22\xa1\x55\x46\x79\x25\xf4\x5b\xd4\x62\x77\xcb\xf9\x59\x50\x0e\xdf\x25\x04\x5e\x55\x68\x1b\x7f\x64\x8f\x9b\xac\xfa\xff\x10\x35\x49\xda\x91\x63\x8e\xc3\x23\x88\x6d\xee\x3a\x4a\x86\x5e\x06\xc9\x8a\x39\x51\xc9\x38\xcf\x46\xe4\x09\xda\xb6\xf5\x66\xc5\x2e\x03\x65\x62\xcc\xbd\xa4\x78\x86\xa8\x9c\x8f\xca\x64\x67\xb3\x5f\x8d\xde\xe5\xe0\x5d\x83\xcc\x8d\x31\x50\xa8\x50\x8b\xb6\xb0\x73\x4a\xd5\xe8\x96\xd6\x49\x64\xa6\x11\xf4\x30\xe6\x79\x4c\xf0\x14\x97\x8c\x65\xdf\x08\xd7\xca\x1e\xc9\xbe\x4e\xfc\x24\x47\x3f\x18\xa9\x9b\x50\x39\x19\xba\xc5\x06\xd7\x55\xd5\x88\x0d\x9e\x81\x32\x1d\x98\xf9\x81\x8f\x1e\xc0\x8c\xbe\xba\x42\x81\x52\x0b\xc7\x90\x6d\x61\x37\x49\x01\x78\x02\x06\xc4\xf2\x98\x2a\xef\xac\xf5\xf3\x8c\xa8\x7c\x54\x01\x61\x46\xb7\x4e\x86\x16\x35\x89\x37\x4f\x3b\x92\x84\x03\x9a\x8d\x72\xd6\x84\x86\x10\x7b\xed\xe4\xe3\xdd\x4f\xef\xde\xfc\xfa\xf9\xfd\x87\xab\x49\x6c\x01\x53\xb6\x87\xdd\xa0\x73\xe3\x7e\x9d\xb0\x09\x2d\x6e\xb1\x8b\xdd\xd4\xeb\x63\x3a\x3e\x68\xb4\x0f\x75\x1c\x82\x93\x89\x1f\x55\x94\x7b\x1e\x3f\x3c\xba\xdb\xb8\x44\x27\x50\xa4\x95\x2e\xf8\x24\x61\x71\x08\x68\x52\xa7\x07\x34\xd3\x41\x6f\x61\x40\x68\x8f\xce\x30\xb4\x7e\x20\xf1\xd2\xd9\x8a\xc3\xa2\x43\x2c\x53\x10\xc4\xe1\xd6\x76\x55\x36\x83\xb6\x72\x4d\x0f\x9d\x8d\x66\x93\x1f\xb1\xcb\x60\xee\x91\x5d\x36\x42\x37\xf8\xc0\x26\xcf\x05\xf1\x61\x0c\x74\x3d\xf7\x89\x08\xe0\x96\x3f\x6e\xf5\x4f\x34\xfb\x47\xe2\x92\xa9\x22\xba\x19\xd1\x8d\xeb\xc3\x73\x99\xb7\x15\x0c\x4a\x2c\x50\x53\xd7\x7a\x07\x3f\x7f\xf9\x72\x0d\x0b\x41\x4a\x82\x68\x7c\x09\xd2\x61\xa8\xa4\x42\xc7\xae\x3e\xbc\x07\x98\xe1\x46\x89\xa0\xf8\xfd\xd5\x87\x2f\xbf\xbf\xbe\xfb\xf2\xf3\xdd\xed\xbb\x9b\xfb\xa0\x6e\xbf\xf4\xf1\xdd\x6f\xf7\xa3\x80\xdf\x08\xa7\xf8\x35\x47\x1d\x40\x4e\x18\x46\xf8\x72\xe0\xbf\xf7\xce\x56\x63\x1f\x46\xb2\x1b\x5c\xe6\x23\xcd\x47\x58\x91\x0b\x1b\xab\x30\x18\x80\x6d\x9e\x8f\xec\x11\x4d\x10\xdf\xa8\x58\x70\x27\x96\x42\x96\x58\x70\x68\xa5\xb1\xdd\xc3\x6a\xb6\x14\x73\x9f\x26\x5c\xac\x6b\x71\x73\x72\xa0\x7d\x63\x87\x83\xd3\x70\x09\xbf\x0d\x5b\x1b\xfb\x12\x29\x8d\x85\x01\xbd\xfa\xad\x65\x29\x1b\xb6\x53\xc8\xb8\x30\x10\x08\x81\x08\xa5\xdd\x86\xf7\xaf\x35\x06\x65\x70\x99\xf2\xe3\xd8\x99\xcd\x7a\x05\xc2\xe3\x87\x2f\xbf\xec\x97\xb2\x16\xf4\x65\xb4\x91\x99\xd4\x0d\x79\x74\x19\x17\x70\x9d\x9a\xe4\x8e\x62\xad\x19\x4c\xf1\x26\x92\x7e\xb8\x1e\x29\xc5\x65\x87\xd0\x87\xf7\xf5\x38\xb2\x07\x19\x3a\x7a\x8e\x2e\xef\x98\x32\xbc\x78\x93\x16\x94\x4a\xdc\x52\x5f\x9e\x8c\x50\xa6\x22\xa8\x1a\x0a\x13\x80\x60\x3d\x85\x45\x4c\xa7\x45\x68\x6c\x01\xe3\x85\x87\xff\xab\xee\x35\x7d\x9a\xca\xd2\x15\x97\x98\x86\x1c\xc0\xc9\xfb\x7f\x24\x08\x37\x83\xd8\xe0\x66\x85\x72\x97\x0f\xda\x5e\x2a\xd6\x4d\x82\x30\x07\xe7\xdd\xdd\xfc\x12\x07\x14\xc2\xac\xe2\xde\x95\xf2\xe1\xd1\x4c\xca\x5b\xb7\xeb\xcb\xf5\x7b\x46\xc6\x09\xbb\xa7\x72\x8e\xc3\x26\xd1\xbd\x4d\x99\xa3\xe9\x94\xe6\x42\x87\x9d\xff\xf6\x2a\xcd\xcc\xd3\x7c\xf8\xfe\xf1\xdd\x6f\xa7\xff\x8c\x4f\xf7\x00\xab\x1b\x42\x37\x1f\x84\xcd\xd2\x44\x67\xfb\x70\x3a\x35\x4e\x5f\xee\xf7\x90\x5d\x29\xcf\xca\x86\x51\xdc\x98\x62\xe1\x84\x91\x65\x47\xf4\x53\xf8\x16\x87\x72\x6a\x19\x96\xb8\x7e\xd1\xb1\x93\x8c\xe1\xf8\xdc\x6d\x88\x14\xfa\x97\x55\x26\x39\x30\x99\x4e\xda\xd9\x9e\x26\x4c\x8f\x3f\x5d\xd4\x1c\x72\xe0\xc9\xf8\xea\xaa\x84\x51\x4b\xc6\xe4\x9c\x43\xa4\x0a\x74\xd1\x1d\x07\x2f\x9b\x30\x93\xb0\x84\xd0\x98\x02\xdd\x81\x8f\x1d\x6a\xe1\xd5\x06\x03\xe4\xa4\x2e\x02\x57\x23\x3f\x1f\xe4\x64\xaf\x1c\x35\x8b\x42\xb9\xf3\x69\xfc\xfb\x4d\x3f\xa8\x1c\x8c\x13\x06\x91\xc7\x8c\x13\xa6\x7b\x9d\x55\x3b\xaa\x23\x0c\xee\x08\xdd\xb1\xf3\xec\xdc\xde\x73\x4c\x03\xc7\xcf\xbf\xab\x84\x3a\x2a\x00\xf2\x46\xc7\xa1\xa3\x1a\x46\xad\x47\xdd\x81\x5c\x4a\xb6\x96\x0d\x8a\x26\x8c\xef\xd8\x4e\xdc\xb1\x95\x3f\x78\x80\xa7\xb6\x6a\x7b\x5f\xdb\xd9\x2e\x9f\x68\x75\xdd\x89\x96\x17\x9f\xba\xfc\xc7\x1a\x77\xa0\x8a\x1f\x7b\xb2\x27\xe0\x4c\x22\x15\xb3\x10\xbe\x71\x38\x9a\x02\x1c\xb9\x2b\x6c\xef\x66\x3d\x3d\x8d\xca\x55\x57\xad\x41\x79\x28\x05\x85\x56\x6c\x8d\xde\x81\x90\x12\x29\x56\xf4\x12\xe3\x20\xed\x55\x37\xb3\xb9\x5f\x0a\x4d\x78\x7f\x7a\xb2\xdf\xcf\x3a\x47\xdc\xb4\x3d\xfc\x98\x2f\x3a\xa6\x81\xfe\x61\x3e\x1c\x27\x3b\xe2\x27\xf2\xae\x91\x3e\xca\xbb\x0d\xcf\x79\x86\x78\x8d\x07\xda\x19\x09\x0b\x6b\xd7\x6b\xc4\x9a\xa3\xbe\x17\x75\xb2\x52\x7e\x32\x85\x0a\x05\x1b\x9c\x0b\x1a\x88\xf0\xc6\x6e\x13\xa1\xa9\xc9\x3b\x14\x55\x9f\x11\xa7\x07\x82\x31\xeb\x19\x79\xe1\xf1\x92\x0b\xcc\xa3\x71\x63\xf0\x0f\xdf\x05\x4f\xd2\xf1\x84\x81\x49\x77\xc7\xa4\xeb\x47\x09\x93\x57\x98\xad\xb2\x29\xfc\x07\x19\x59\xbe\xd1\xb6\x29\x4e\xb3\x30\x20\xf2\x76\xcd\xef\x13\x82\x5a\x38\xaf\x64\xa3\x85\xeb\x9c\xd1\x72\x39\x6c\xa5\xed\xad\x97\x5b\xe2\x3a\x2a\x99\x57\xb6\x65\xbe\xd9\xd6\xba\x35\xf5\x8f\xcd\x83\x63\xe1\xa2\x4b\xb1\x90\xe7\xdf\x5c\x3c\xfc\x3f\x55\xf8\x16\xdd\xe6\xc8\x5c\x9f\x61\xf5\x80\x23\x38\xe2\x7f\x48\x1b\x9a\x58\x73\x33\x88\xbe\x22\xf4\xc9\x8f\x05\x2f\x93\xdf\x1b\x92\x1f\x0e\x58\xc5\x30\x00\x0b\xd0\x36\x1b\x45\x93\x56\xe4\xd1\xcc\x5a\x11\x2e\xf3\x8b\xb3\x8b\xf3\x93\xb6\x1a\xbc\x2e\x0a\x15\xc7\x0a\xdc\xae\x5e\x33\x5c\x1d\x85\xd9\xb0\x3f\x20\x96\xfd\x1e\x5c\x68\x7e\xcf\x9c\x9e\x85\x5f\x6d\x46\x15\x64\xf8\xd4\x5d\xf0\x6b\xdd\xb2\x7f\xfb\xf9\xb6\x83\x1a\x34\x6d\x9f\x00\x8d\x6b\x81\x07\x98\xc2\x7a\x02\x1b\x88\xa1\x12\xbb\x30\x8e\xd1\x9b\x61\x28\x67\x48\x5b\xbb\x6e\x6a\x50\x44\x0d\x12\x58\x03\x64\x2b\x84\x8f\xcd\x02\x9d\x41\x8f\xc4\xdc\x9b\x9a\x86\x99\x5b\x61\xa8\x9b\xf8\x4c\x3e\x5b\x83\x93\x74\xe7\x4d\x10\x20\x9d\xba\xc5\xcb\x69\x3c\x88\xeb\xa0\x7c\x90\x6f\xb4\xd3\xbf\x32\x26\xe7\x93\x93\xff\x05\x00\x00\xff\xff\x80\xb5\x5d\xeb\x1f\x1b\x00\x00"),
		},
		"/flux-secret.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "flux-secret.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 137,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xca\x31\x0a\xc2\x40\x10\x85\xe1\x7e\x4f\xf1\x2e\xb0\x82\xed\x1c\x42\x0b\xc1\x7e\xc8\xbe\xc8\x62\xb2\x19\x93\x89\x18\x86\xdc\x5d\x14\x1b\xcb\x9f\xff\xcb\x39\x27\xb5\x7a\xe5\xbc\xd4\xa9\x09\x9e\xc7\x74\xaf\xad\x08\x2e\xec\x66\x7a\x1a\xe9\x5a\xd4\x55\x12\xd0\x74\xa4\xa0\x1f\xd6\x57\xbe\x55\xcf\x85\x36\x4c\x5b\x04\x6a\x8f\xc3\x49\x47\x2e\xa6\x1d\xb1\xef\x3f\xfa\x4d\x41\xc4\xff\x8d\x00\x5b\xf9\x30\xdf\x8c\x82\xb3\xe9\x63\x65\x7a\x07\x00\x00\xff\xff\x40\x21\xa1\xbb\x89\x00\x00\x00"),
		},
		"/memcache-dep.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "memcache-dep.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 874,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x93\xcd\x6e\x9c\x40\x10\x84\xef\x3c\x45\x49\x7b\x0d\x1b\x61\x69\x2f\xdc\xa2\x38\x89\x2c\x25\xd6\x5e\x9c\x7b\x7b\x68\xf0\x28\xf3\x97\xe9\x66\xb3\x04\xf9\xdd\xa3\xd9\x5f\x36\xf6\x9c\x80\xaa\xaf\xa7\xa6\x80\xba\xae\xab\x15\x3c\x7b\x43\xe6\x85\x3b\x74\x9c\x5c\x9c\x3c\x07\xc5\x28\xdc\xe1\x79\xc2\x57\x37\xee\xa1\x11\x07\x47\xb5\x82\x89\x41\xc9\x06\xce\xb0\x9e\x06\x86\x67\xa5\x8e\x94\xd6\x15\x25\xfb\x93\xb3\xd8\x18\x5a\x50\x4a\xf2\x71\xd7\x54\xbf\x6c\xe8\x5a\xdc\x5f\xc6\x56\x67\x7b\x5b\x01\x81\x3c\xb7\xd7\xdd\xe7\x19\xb6\xc7\xfa\x91\x3c\x4b\x22\xc3\x78\x7d\x3d\x99\x0e\xb7\x2d\xe6\xf9\x56\x9d\x67\x70\xe8\x8a\x4d\x12\x9b\x32\x31\x73\x72\xd6\x90\xb4\x68\x2a\x40\xd8\xb1\xd1\x98\x8b\x02\x78\x52\xf3\xf2\x9d\x9e\xd9\xc9\xf1\xc1\x9b\x00\x15\xa0\xec\x93\x23\xe5\x13\xb2\x08\x5b\x96\xbb\xa1\xdf\xe3\x81\x73\x94\xb2\x2e\x5d\x5d\x98\xfa\x5d\xa6\xac\x43\x9b\x0b\xa1\x6d\xd6\x9b\x75\xb3\xb9\xd5\xb7\xa3\x73\xdb\xe8\xac\x99\x5a\x3c\xf4\x8f\x51\xb7\x99\xa5\xd4\x7a\x76\x51\x1e\x16\xf9\x6a\xd4\x1e\x9b\xe6\x0e\xc0\x0a\x3f\x68\x6f\xfd\xe8\xcb\x0e\x31\x4f\xe5\x95\x8e\xc2\x1f\x60\x03\x3c\x0f\xf4\x3c\x29\xcb\x12\x7c\xc0\xc6\xe3\x06\x14\xfb\x97\xd1\xc7\x8c\x18\x18\x56\xd9\x2f\xed\x09\x4d\x73\xd7\x34\x58\xe1\x9e\x7b\x1a\x9d\x22\xc5\x7c\xcd\xb5\x2a\x9e\xdd\xee\x78\xf9\x14\x4c\xf4\x87\x8f\x4c\x23\x06\x56\xb8\x38\x08\x62\x0f\x26\xf3\x82\xcc\xbf\x47\x16\x05\x85\x0e\x99\x25\xc5\x20\xbc\xbe\x0c\x2a\x53\x6f\x4e\x78\xec\xd3\x38\xcb\x41\xaf\x07\x58\x74\xbf\x8d\x59\xdb\x63\xba\x8b\x2c\x6c\xc6\x6c\x75\xfa\x1c\x83\xf2\x5e\xdb\x05\x97\xc7\xf0\x49\x9e\x84\xf3\xff\xcc\x49\xfa\x96\xe3\x98\xde\x6a\xe4\x5c\xfc\xb3\xcd\x76\x67\x1d\x0f\xfc\x45\x0c\x39\xd2\xc3\xaf\xd0\x93\x13\xae\xfe\x05\x00\x00\xff\xff\x5d\x9a\x63\xab\x6a\x03\x00\x00"),
		},
		"/memcache-svc.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "memcache-svc.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 206,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8c\x3d\x0e\x02\x21\x10\x46\x7b\x4e\xf1\x5d\x00\x13\x2c\x39\x84\x8d\x89\xfd\x04\x3e\x23\x51\x58\x02\x64\x9b\xc9\xde\xdd\xb0\x6b\xe3\x76\xf3\xf3\xde\xb3\xd6\x1a\xa9\xe9\xc1\xd6\xd3\x52\x3c\x56\x67\xde\xa9\x44\x8f\x3b\xdb\x9a\x02\x4d\xe6\x90\x28\x43\xbc\x01\x8a\x64\x7a\x64\xe6\x20\xe1\xc5\xa8\x8a\xf4\xc4\xe5\x26\x99\xbd\x4a\x20\xb6\xed\x07\xed\xab\x87\xea\xff\x57\x15\x2c\x71\x62\xbd\x32\xcc\x62\x5d\xda\xe8\x73\x00\xec\x39\xbf\x5f\x0f\xc4\xc3\xb9\xab\x73\x06\xe8\xfc\x30\x8c\xa5\x1d\xce\xd9\xf8\x06\x00\x00\xff\xff\x20\x2f\xef\xba\xce\x00\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/flux-account.yaml.tmpl"].(os.FileInfo),
		fs["/flux-deployment.yaml.tmpl"].(os.FileInfo),
		fs["/flux-secret.yaml.tmpl"].(os.FileInfo),
		fs["/memcache-dep.yaml.tmpl"].(os.FileInfo),
		fs["/memcache-svc.yaml.tmpl"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
