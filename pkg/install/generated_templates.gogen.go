// Code generated by vfsgen; DO NOT EDIT.

package install

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// templates statically implements the virtual filesystem provided to vfsgen.
var templates = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
		},
		"/flux-account.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "flux-account.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 836,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\x4b\xaf\xd3\x30\x10\x85\xf7\xfe\x15\x47\xba\x8b\x0b\xe8\x26\xa8\x3b\x94\x5d\xdb\x05\x0b\x10\x8b\xf0\xd8\x20\x16\x63\x7b\x42\x4d\x5d\x3b\xf2\x23\x3c\xa2\xfc\x77\x94\xa4\x95\x9a\xb6\x20\x55\xba\x3b\x7b\x7c\xc6\x73\xe6\xe8\x2b\x8a\x42\x3c\xe0\xd3\x8e\x11\x39\x74\x46\x31\x48\x29\x9f\x5d\x7a\x82\xb2\x39\x26\x0e\x08\xde\x72\x7c\x02\x39\xbd\x28\x41\x1a\xa7\x8d\xfb\x0e\x0a\x2c\x1e\xe0\x9d\xfd\x0d\xc7\xac\x59\xa3\xf1\x01\xef\xb2\xe4\xe0\x38\x71\xc4\x4f\x93\x76\x53\x4b\x21\x29\xb2\x1e\x27\x70\x8c\x50\xde\xa5\xe0\x2d\x5e\xd4\x9b\xf5\xf6\x65\x29\xa8\x35\x5f\x38\x44\xe3\x5d\x85\x6e\x25\xf6\xc6\xe9\x0a\x1f\x67\x57\xeb\xd9\x94\x38\x70\x22\x4d\x89\x2a\x01\x58\x92\x6c\xe3\x78\x02\x1c\x1d\xb8\x42\x63\xf3\x2f\x71\x7e\xe9\x7b\x98\x06\xe5\x07\x3a\x70\x6c\x49\x31\x86\xe1\xf8\x3e\x5d\x2b\xf4\xfd\xf2\xb5\xef\xc1\x4e\x0f\x83\x18\x73\x39\x37\x14\x24\xa9\x92\x72\xda\xf9\x60\xfe\x50\x32\xde\x95\xfb\x37\xb1\x34\xfe\x75\xb7\x92\x9c\xe8\xe4\x77\x3b\x27\x54\x7b\xcb\xf7\x9a\x15\x21\x5b\x9e\x24\x05\xa8\x35\x6f\x83\xcf\x6d\xac\xf0\xf5\xf1\xd5\xe3\xb7\xa9\x2f\x70\xf4\x39\x28\x5e\x14\x3b\x0e\xf2\xac\x50\xc0\x79\x57\x1f\x85\x9f\xeb\xf7\xff\xd6\x3e\xc3\x86\x9b\x99\x80\xfb\x17\xf5\x96\x6b\x6e\x46\xd1\x69\xd1\xff\xcc\x17\xc0\x75\xb6\x8b\xff\x62\x96\x3f\x58\xa5\x63\x76\x37\xc1\xb9\xb2\x73\x89\xc1\x25\x27\xb7\xc8\xb0\x71\x3c\x69\x6e\x28\xdb\x34\xa3\x32\x12\xf5\x37\x00\x00\xff\xff\xfd\x7f\x67\x6a\x44\x03\x00\x00"),
		},
		"/flux-config.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "flux-config.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 463,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x91\x41\x4b\x03\x31\x10\x85\xef\xf9\x15\x8f\x16\x6f\xdd\x82\x1e\xf7\x26\x05\xc1\x83\x5e\x14\xef\xc3\x66\xb6\x1d\xdc\x26\x4b\x32\xdb\x0a\x31\xff\x5d\x36\xa1\xcb\x2a\x9e\x32\xc3\xbc\xf7\x65\x5e\x92\x12\xa4\xc7\xfe\xe0\x5d\x2f\xc7\x27\x19\xf8\xe0\x9d\xb2\x53\x34\x39\x9b\xa6\x69\xcc\x16\xef\x27\x46\xef\x87\xc1\x5f\xc5\x1d\x21\x11\x53\x64\x0b\xf5\x18\x83\xbf\x88\x65\x10\xba\x62\x9f\x02\xa9\x78\x87\xde\x07\xf4\xc3\xf4\x65\xf7\x66\x8b\xe7\x85\xfe\x18\xeb\xf9\x42\xe3\x4c\x89\xac\x33\x44\xc3\xc4\x3b\xe8\x89\xff\x40\x24\xa2\x0b\x4c\xca\xd6\x6c\x41\x11\x84\xc5\xbd\x83\xd7\x13\x87\xab\x44\x86\xe8\x4a\x59\x75\x6f\xdc\x05\xd6\xbd\xa1\x51\x3e\x38\x44\xf1\xae\xc5\xe5\xde\x7c\x8a\xb3\x2d\x7e\xe5\x5d\x6f\x94\xf3\x52\xa7\x04\x1e\x22\x23\xe7\x8a\x9a\x7b\x67\x91\xb3\x39\xb3\x92\x25\xa5\xd6\x00\x8e\xce\xdc\x96\x9c\x4d\xdd\xdc\xe0\x46\x7f\xa5\x33\xc7\x91\x3a\x2e\xaf\x58\xa5\xa5\x2f\xf7\xaf\xc6\x65\x9a\x52\x73\xe3\x57\x76\x4a\x18\x83\x38\xed\xb1\xb9\x8b\x9b\xff\x3e\xe7\x1b\xe2\xec\x5c\x3c\xcc\xae\x15\xe0\x27\x00\x00\xff\xff\x02\xd2\xd6\x67\xcf\x01\x00\x00"),
		},
		"/flux-deployment.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "flux-deployment.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 7644,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x59\x6d\x6f\x1b\x37\xf2\x7f\xef\x4f\x31\x50\xfe\x40\x62\x40\x5a\xd9\x75\x5b\xfc\xb1\x3d\x17\x97\xe6\xc1\xf5\xa5\x49\x8d\x38\xbe\x43\x5f\xd5\xd4\xee\x48\x4b\x88\x4b\xee\x71\x48\xa9\x82\xd1\xef\x7e\x18\x72\x1f\xb8\x92\xec\xf8\xfa\xee\xf2\x22\xb6\x77\xc9\xe1\xcc\x6f\x9e\x7e\x9c\x9d\xcd\x66\x27\xa2\x91\xff\x44\x4b\xd2\xe8\x1c\x44\xd3\xd0\x7c\x73\x7e\xb2\x96\xba\xcc\xe1\x2d\x36\xca\xec\x6a\xd4\xee\xa4\x46\x27\x4a\xe1\x44\x7e\x02\xa0\x45\x8d\x39\x2c\x95\xff\xe3\xe1\x01\xe4\x12\xb2\x4f\xa2\x46\x6a\x44\x81\xf0\xe7\x9f\xed\xfb\xf0\x67\x0e\x0f\x0f\xe3\xb7\x0f\x0f\x80\xba\xe4\x65\xd4\x60\xc1\xc2\x2c\x36\x4a\x16\x82\x72\x38\x3f\x01\x20\x54\x58\x38\x63\xf9\x0d\x40\x2d\x5c\x51\xfd\x22\x16\xa8\x28\x3e\x48\xcf\xe6\xd5\xce\x0a\x87\xab\x5d\x7c\xe9\x76\x0d\xe6\xf0\x19\x0b\x8b\xc2\xe1\x09\x80\xc3\xba\x51\xc2\x61\x2b\x2c\xb1\x80\xff\x09\xad\x8d\x13\x4e\x1a\xdd\x0b\x07\x68\xac\xa9\xd1\x55\xe8\x29\x93\x66\xde\x18\xeb\x72\x98\x5c\x9c\x5d\x9c\x4f\xe0\x05\x38\x54\x2a\x59\x01\xce\x00\x15\x56\x34\x08\xf3\x1a\x9d\x95\x05\xb1\x71\x8d\x91\xda\xbd\x24\xe0\xcd\x59\x2b\x58\x8d\x6c\xd8\xb3\x02\xa0\xc3\x22\xfc\x8e\x76\x23\x0b\x7c\x5d\x14\xc6\x6b\xf7\x69\xbc\x10\x60\x63\x94\xaf\xb1\x17\x35\x6b\x45\xad\xa4\x9b\xad\x71\xd7\x1f\x40\x8c\x82\x1b\x0e\xec\x9e\x0c\xf2\x66\xbc\xa5\x0c\x0e\x4e\x56\x95\xb8\x14\x5e\xb9\x8f\xa6\xc4\x1c\xce\xbe\x3d\x3b\x83\x17\xb0\xad\x50\x43\xcd\xda\x60\x09\x16\x45\x39\x33\x5a\xed\xa6\xb0\x45\xd8\x1a\xfd\xd2\xc1\x02\x41\x2c\x14\x32\x1e\x45\x55\x9b\xf2\xa4\x15\xf8\x02\xbe\x54\x92\x40\x12\x08\x70\x75\xb3\x24\xf0\x84\x25\x2c\x8d\x85\x15\x6a\xb4\xc2\x49\xbd\x82\xdb\xdb\x9f\x61\x8d\x3b\xca\xe0\x5a\xc3\x87\xff\x27\xf8\xf1\x12\xce\xb3\xf3\xb3\x69\x2f\xa5\x3b\x3b\x9a\x40\x20\x2c\xa6\x7a\x90\x61\x55\x34\x62\x09\x02\x08\x1b\xc1\x41\xd1\x02\x05\x5b\xec\xc5\x14\x42\xc3\xd6\x4a\xc7\x8a\x66\xc7\xf1\x5b\xa1\xee\xc1\xc0\xba\x71\xbb\xb7\xd2\xa6\x20\xd6\x58\x4a\x5f\xe7\xf0\x11\x6b\x63\x77\xa9\x9d\x08\x4b\xa3\x94\xd9\xb2\x45\xed\xd1\x92\x82\xa9\x9e\xf8\x99\x80\xc2\x93\x33\xb5\x64\x04\xd6\xda\x6c\xf5\xef\x95\x21\x47\xbd\x88\xa5\x54\x38\x85\x6d\x25\x8b\x0a\x76\xc6\xc3\x56\x2a\x15\x8d\x72\x06\x4a\xc3\x79\xc6\x8f\x79\x13\xff\x62\xc1\x6c\x35\xab\xdd\x0b\xb0\xd8\x18\xb0\xc2\x55\x68\xc1\x55\x42\xb7\x07\xaf\xa4\xab\xfc\x02\x0c\x3f\x44\x50\x72\x8d\x19\xfc\x66\xfc\x4b\xa5\x40\x28\x32\xdd\x11\x63\xb0\x41\x3a\x90\xda\x99\xb0\xa7\x30\xda\x09\xa9\xd1\x4e\x61\x81\xca\x6c\x33\xb8\xc5\x01\xd5\xca\xb9\x86\xf2\xf9\xbc\x34\x05\x65\x1c\x58\x45\xc9\xa9\x83\x7a\xce\xa9\x47\x6e\xbe\xf2\xb2\x44\x9a\x7b\xc2\x59\x63\xe5\x46\x38\x0c\xa1\xc7\x86\x64\x95\xab\x55\x2f\xa9\xf3\x05\x51\x35\x2b\x8c\x5e\xca\x55\xff\x0a\x20\x3e\xf8\x28\x9a\x3c\x79\x98\x26\xd2\x2c\xd9\xf6\x57\xfd\x92\xad\xfd\x02\xe7\x51\xc8\x10\x7e\x5f\xf5\xc9\x56\x52\xc5\x4f\x2a\xb1\x41\x10\x50\xca\xe5\x12\x2d\x17\xcd\x4e\x42\x9b\x55\x43\x61\x0c\x2e\x88\xe2\x52\x27\x70\x71\xd9\xc8\x12\x3b\xd8\x97\x72\x55\x8b\x66\x50\x44\xba\x0a\x84\x06\xd4\xce\xee\x82\x0d\xf7\x71\xd1\xfd\x14\x84\x2e\xc1\xeb\xc2\xd4\x5c\xad\xc3\xfe\x68\xed\xc7\xe0\x4e\xa1\xcb\x5e\x0a\xea\x4d\x90\x20\x91\x5a\x7f\x1e\x78\x80\x61\xf8\x0b\x1e\x48\xb6\x7d\xd5\x03\xa1\x12\x38\x03\xb2\xe6\x3a\x09\x57\x37\x57\xa1\x08\xc0\x2b\x36\x8b\xe4\x4a\x4b\x3d\x1c\xce\xc6\x6d\xd0\xca\xa5\x2c\x42\xc1\x86\xc6\xdb\xc6\x10\xd2\xe9\x33\x80\xec\xa5\xc4\xf2\x11\x51\x64\x80\xf8\xbc\x67\x00\x07\xc2\xae\x86\x34\x7d\x04\xb1\x55\xb3\xe2\xfa\x41\x09\x34\xe3\x12\xfc\xe2\x91\x22\x7c\xb8\xef\x48\x11\xee\xe0\x7c\x78\x98\x85\x7e\xfb\x26\x80\xfc\x5e\x2a\x7c\x63\xb4\x63\xbd\x43\xdf\x7d\x1e\xe2\x1d\x34\xa2\xf5\xa8\xb7\x11\x53\x06\x9e\x75\x2a\x47\x92\x86\xfd\xb1\xad\x96\xac\x00\xa3\x34\x6b\x93\x6d\xc6\x85\x0b\x18\x3f\xc6\x4a\x49\x3d\x00\x6e\x9a\x20\x58\x52\x77\x66\x99\xc1\x75\xaf\xfe\x6b\x7a\xd3\x45\x14\x2f\x21\x74\xac\x9d\xb3\x1e\xa7\x23\xb7\x8d\xb5\xe4\x66\x42\xe4\xeb\x68\x0b\x77\x1e\xe8\xc5\x4c\xc1\x70\xf5\xdb\x4a\xc2\x50\xc0\xfa\xa5\xbd\xac\x6e\xcb\x6d\xf0\x43\x76\x14\xd6\x54\xaf\x1e\xd6\x59\x1a\xe7\xad\xe1\x11\x9a\xbe\x3b\x1c\xe4\xc7\x5e\x76\x8c\x12\x8a\x8f\x64\x22\x34\xeb\x4f\x68\x95\x78\xa5\x8d\x3b\xa2\xc9\xe9\x7f\xa5\xca\x33\xba\xff\x33\xb4\x69\x89\xda\x49\x6f\x5e\xec\x02\x07\xdc\x23\x61\x27\x6d\xd4\x58\x0c\x3d\x5a\x1b\x98\xe4\xb1\x0b\x4c\x40\xd6\x62\x85\xd4\x47\x59\x06\xef\xa5\x2e\x43\x24\xd5\xdc\xd2\x2c\x16\x43\xc5\x8c\xed\x4c\xa1\x20\xe4\xc6\x15\xb6\x72\x01\x60\x8e\x0a\xc2\xf5\x3d\xa7\xf2\x8b\xac\x34\xc5\x1a\x6d\x56\x98\x7a\x6e\xe7\xb1\xff\x84\x1f\x73\x27\xfa\xb4\xed\x6a\x08\x73\x4d\xe6\xa1\x7c\xaa\x13\x2b\x60\x4d\xb3\x7e\x4d\x38\x26\x87\x56\xa0\x34\xa9\xb4\xfc\x3c\x3b\xff\x2e\x3b\x1b\xaf\xbd\xf1\x4a\xdd\x18\x25\x8b\x5d\x0e\xd7\xcb\x4f\xc6\xdd\x58\xa4\xd4\x0a\x8b\x64\xbc\x2d\x90\x52\x57\x58\xfc\xb7\x47\x72\xa3\x67\x00\x45\xe3\x73\xf8\xee\xac\x1e\x3d\xac\x03\xcd\xc8\xe1\xfb\x6f\x3f\xca\x81\xa2\x1a\x9b\x6e\x9e\x0d\x9e\xb9\x09\x74\xf5\xe2\xec\x82\x59\x9b\xd4\x4b\x63\xeb\x90\x34\x42\xf5\xab\x95\xdc\xa0\x46\xa2\x1b\x6b\x16\x98\x6a\xc0\x90\x5e\x8d\x63\x26\x1e\x15\x05\x8e\x1f\x0b\x57\xe5\x30\x17\x8d\x8c\x48\x6f\xbe\x9f\xcb\x12\xb5\x93\x6e\x97\x35\x7e\x91\xac\x95\x5a\x3a\x29\xd4\x5b\x54\x62\x77\xcb\xbd\xa1\xa4\x1c\xbe\x4b\x16\x38\x59\xa3\xf1\xee\xc8\x3b\x26\x78\xf2\x7f\x43\xd5\xa4\x61\x8c\x1c\x73\x9c\x9a\x43\xa4\x58\x37\x51\x33\x74\x45\xd0\xac\x9c\x13\x55\xb1\x42\x85\x5b\x0f\x28\xd3\xf6\xba\x15\xbb\x0c\xa4\x8e\x31\xf7\x92\xe2\x1e\xa2\x6a\x3e\xca\xe1\x0e\xb3\x5f\xb5\xda\xe5\xa1\x8c\xb2\x34\xe6\xdf\xa1\x3b\x2e\x5a\x52\xc1\x29\xd5\xa0\x5d\x1a\x5b\x20\x0b\x8d\x84\x9b\xf9\xf6\x63\x8a\xa7\x9c\x78\xac\xfb\x46\xd8\x56\xf7\xb8\xec\xaf\xa9\x9f\xe4\xe8\xb5\x2e\x94\x0f\x5d\x9b\xaf\x0d\x91\x5c\x75\x1d\x3d\xf2\xd2\xaf\xd0\xe8\x8e\x48\xff\xc0\x5b\xf7\x28\xee\xd0\xcc\x4a\x2c\x94\xb0\x7c\x5d\x58\x98\x4d\x52\x00\x9e\xa0\xa0\xb1\x35\xa7\xc6\x5b\x63\xdc\x3c\x23\xaa\x1e\x35\x40\xe8\xd1\xa9\x93\x81\x1e\x4d\xe2\xc9\xd3\x6e\x49\x22\x01\xf5\x46\x5a\xa3\x03\x19\x89\x3c\x6f\xf2\xe1\xee\xa7\x77\x6f\x7e\xfd\xf4\xfe\xfa\x6a\x12\xe9\xc7\x94\xf1\x30\x1b\xb4\x76\xcc\x15\x13\x31\xa1\xd9\x2f\x76\x91\xc9\x39\x75\xcc\xc6\x03\x92\x77\x68\xe3\x10\x9c\xbc\xf8\x51\x43\x99\x54\xf0\xa5\xb7\x3b\x8d\x4b\x74\x42\x83\x5b\xed\x82\x4f\x12\x11\xfb\x64\x3a\x75\x7a\x60\xd2\xdd\xb5\x4f\x68\x10\xca\xa1\xd5\x7c\xad\x3b\xd0\x78\x69\x4d\xdd\x73\x99\x9a\x49\x80\x20\x0e\xb7\x96\xd1\x31\x0c\xca\x14\x6b\x3a\x74\x36\xea\x4d\x7e\x04\x97\x01\xee\x11\x2e\x1b\xa1\x3c\x1e\x60\xf2\xb5\x20\xde\x8f\x81\x8e\xef\x3d\x11\x01\x4c\x37\xc7\x34\xf3\x09\xa2\xf9\x48\x5c\xf2\xaa\xc8\xac\x47\xeb\xc6\xf5\x61\x50\xba\x1d\xe3\x1c\xd2\xca\x81\x10\x3c\x8b\x77\x3c\x12\x3d\xc9\x39\xfb\xac\xe2\xb1\xac\xdf\x0a\x1d\xe8\x20\xf9\xa6\x51\x3b\xf8\xf9\xcb\x97\x1b\x58\x08\x92\x05\x08\xef\x2a\xe6\xa2\xa1\x8a\x0b\x15\x19\xc5\x70\x0f\x66\x81\x1b\x29\x02\xe8\xf7\x57\xd7\x5f\x7e\x7f\x7d\xf7\xe5\xe7\xbb\xdb\x77\x9f\xef\x03\xd4\xfd\xa3\x0f\xef\x7e\xbb\x1f\x25\xdb\x46\x58\x29\x16\x0a\xa9\xbb\x18\x26\x02\x69\x44\x17\xdb\xd8\x79\x6f\x4d\x3d\x8e\x9f\xb8\xec\x33\x2e\xf3\x11\xea\x23\x16\xc8\x45\x95\x4d\x18\x00\x60\x7f\xe7\x23\x3c\x22\x04\x71\x36\x83\x25\xb3\x80\x42\x14\x15\x53\x6f\x3d\xca\xab\xfe\x3a\xc9\x48\xb1\xf4\x69\x22\xc5\xd8\xf6\xbe\x98\x6c\x68\x67\x4b\x61\xe3\x34\x1c\x52\x08\xdd\x61\xec\x2a\xa4\x34\x0e\x87\x3b\x84\xdb\x1a\xd6\xd2\x33\x4e\x21\xdb\xc3\x20\x2c\xb8\x16\x2a\xb3\x0d\x73\x1f\xa3\x35\x16\xc1\x65\xd2\x8d\xe3\x76\x36\xeb\x0d\x08\x97\x7e\x3e\xfc\xb2\x7f\x94\xb5\x97\x9d\x8c\x36\x45\x56\x28\x4f\x0e\x6d\xc6\xcd\x43\xa5\x90\xdc\x51\xac\x73\x03\x14\x6f\xe2\xd2\xeb\x9b\x91\x51\x5c\xf2\x08\x5d\x98\x2b\x8d\xb3\x6a\xd0\xa1\x5b\xcf\xd1\xe5\x2c\xaf\x0c\x93\x9e\x24\xce\x53\x8d\xdb\xd5\x97\x27\x23\x86\x2b\x09\x6a\x4f\x61\xf2\x15\xd0\x93\x58\xc6\x54\x5e\x84\xa6\x1a\xf8\x65\x18\x78\xbd\xea\xa6\x48\xa7\xa9\x2e\x5d\x61\x8b\x25\x80\x03\x38\x99\x7b\x8d\x14\xe1\x46\x14\x9b\xeb\xac\x94\xf6\xf2\xa0\xe5\xa6\x6a\x7d\x4e\xd8\xed\xe0\xbc\xbb\xcf\xbf\xc4\xc1\x9c\xd0\xab\xf8\xee\x4a\xba\x30\x2c\x22\xe9\x8c\xdd\xf5\xad\xe2\x3d\xb3\xf2\x44\xdc\x53\x39\xc7\x61\x93\xd8\xde\xa6\xcc\xd1\x74\x4a\x73\xa1\xe3\xed\xff\xf7\x2a\xcd\xcc\xd3\x7c\xf8\xfb\xc3\xbb\xdf\x4e\xff\x1e\x47\x56\x81\xd2\x7b\x42\x3b\x1f\x94\xcd\xd2\x44\x67\x7c\x38\x9d\xbc\x55\x97\x0f\x0f\x90\x5d\x49\xc7\xc6\x8e\x4a\x56\x5c\xb1\xb0\x42\x17\x55\xb7\xe8\xa7\xf0\x57\x1c\x46\x73\xd9\xbb\x92\xa1\x62\xd1\xb1\x9d\xcc\x1f\x79\xdf\x6d\x88\x14\xfa\x87\x91\x3a\xd9\x30\x99\x4e\xda\x99\xb6\x22\x4c\xb7\x3f\x5d\xd4\x2c\x72\xe0\x15\x71\xda\x50\x0b\x2d\x97\x7c\x1f\xe0\x1c\x22\x59\xa2\x8d\xee\xd8\xbb\x55\x85\x59\x9c\x21\x04\xaf\x4b\xb4\x7b\x3e\xb6\xa8\x84\x93\x1b\x0c\x74\x97\xba\x08\x5c\x8d\xfc\xbc\x97\x93\xbd\x71\xe4\x17\xa5\xb4\xe7\xd3\xf8\xf3\x9b\x7e\x40\x3f\x80\x13\x06\xf0\xc7\xc0\x09\x53\xed\x0e\xd5\x6e\xd5\x11\x01\x77\x84\xf6\xd8\x7e\x76\x6e\xef\x39\x5e\x03\xc7\xf7\xbf\xab\x85\x3c\xaa\x00\xf2\x8b\x4e\x42\xb7\x6a\xf8\xc4\x70\xd4\x1d\xc8\xa5\x64\x6b\x18\x50\xd4\x61\x6c\xcd\x38\x31\x5b\x90\x6e\x6f\xf0\x94\x62\xd5\xf6\xdd\xb6\xab\x5e\x3e\xd1\x66\xbb\x1d\xad\x2c\xde\x75\xf9\xb7\x35\xee\x40\x96\x3f\x3e\x45\xa1\x12\x6d\x78\xab\x70\xde\xe2\x68\xea\x75\xe4\x8c\xf0\x7a\x37\xeb\xd7\xd3\xa8\x4c\x75\x55\x1a\xa4\x83\x4a\x50\x68\xff\x46\xab\x1d\x88\xa2\x40\x8a\x95\xbc\xc2\x38\x38\x7e\xd5\xcd\x28\xef\x97\x42\x11\xde\x9f\x1e\x39\xad\xdb\x3f\xb6\x82\x9c\xf5\x85\x8b\x07\x6d\xc3\xdd\x9f\xf9\xa0\x77\x40\x3b\x5d\xc0\xc2\x98\xf5\x1a\xb1\xe1\x30\xed\xcf\x98\xac\xa4\x9b\x4c\xa1\x46\xc1\x08\x71\x05\x02\x11\x2e\xe4\x6d\xe4\xfa\x86\x9c\x45\x51\xf7\x21\xbc\xaf\x0d\x8b\x9e\x91\x13\x0e\x2f\xb9\x22\x3c\xea\x68\x8d\x7f\xb8\xce\xdb\x49\x8b\x12\x1a\x26\xdd\x19\x93\xae\x81\x24\x42\x5e\x61\xb6\xca\xa6\xf0\x2f\x64\x1a\xfa\x46\x19\x5f\x9e\x66\x61\x1a\xe6\xcc\x1a\xe3\x40\x4b\x58\x27\x0b\xaf\x84\xed\x50\x6c\xa5\xec\xf7\xbe\xf6\xd4\xcb\x2d\x71\xe1\x2b\x58\x56\xb6\x65\xb9\xd9\xd6\xd8\x35\xf5\x37\xd3\xbd\x6d\xe1\xa0\x4b\xb1\x28\xce\xbf\xb9\x38\xfc\x3f\x35\xf8\x16\xed\xe6\xc8\x07\x28\xe6\xe0\x43\xe3\xe7\x10\xfd\x21\xed\x40\x62\xcd\xd5\x3b\xfa\x8a\xd0\x25\x5f\xb5\x5e\x26\x1f\xc6\x92\x2f\x5c\x6c\x62\x98\xd4\x06\x1e\x9c\x8d\x52\x51\x49\x72\xa8\x67\xad\x0a\x97\xf9\xc5\xd9\xc5\xf9\x49\x9b\xbe\xaf\xcb\x52\xc6\x19\x04\xf7\x97\xd7\xcc\x6d\x47\x75\x72\x78\x3f\x50\x8c\x11\x5f\xb4\xa1\x6f\x7d\x45\xce\x2c\x7c\x68\x4c\x9f\x24\x54\x73\x28\x08\xdd\xa1\xbf\x36\xed\x91\x6f\x3f\xdd\x76\x7c\x81\xa6\xfd\xa4\xb1\x65\x0f\xa0\x4b\xe3\xa8\x9b\x62\xd6\x62\x17\xe6\x39\x6a\x33\x8c\x26\x35\x29\x63\xd6\xbe\x01\x49\xe4\x91\xc0\x68\x20\x53\x23\x7c\xf0\x0b\xb4\x1a\x1d\x86\xb1\xa6\x6f\x68\x18\x18\x97\x9a\xba\x91\xd1\xe4\x93\xd1\x38\x49\xdf\x44\x02\x9e\x8e\x8c\xe3\xe1\x34\x9e\x22\x77\x4c\x3c\xe8\x37\x7a\xd3\x5f\x53\x26\xe7\x93\x93\xff\x04\x00\x00\xff\xff\xcc\x39\x7c\x9d\xdc\x1d\x00\x00"),
		},
		"/flux-secret.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "flux-secret.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 137,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xca\x31\x0a\xc2\x40\x10\x85\xe1\x7e\x4f\xf1\x2e\xb0\x82\xed\x1c\x42\x0b\xc1\x7e\xc8\xbe\xc8\x62\xb2\x19\x93\x89\x18\x86\xdc\x5d\x14\x1b\xcb\x9f\xff\xcb\x39\x27\xb5\x7a\xe5\xbc\xd4\xa9\x09\x9e\xc7\x74\xaf\xad\x08\x2e\xec\x66\x7a\x1a\xe9\x5a\xd4\x55\x12\xd0\x74\xa4\xa0\x1f\xd6\x57\xbe\x55\xcf\x85\x36\x4c\x5b\x04\x6a\x8f\xc3\x49\x47\x2e\xa6\x1d\xb1\xef\x3f\xfa\x4d\x41\xc4\xff\x8d\x00\x5b\xf9\x30\xdf\x8c\x82\xb3\xe9\x63\x65\x7a\x07\x00\x00\xff\xff\x40\x21\xa1\xbb\x89\x00\x00\x00"),
		},
		"/memcache-dep.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "memcache-dep.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 874,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x93\xcd\x6e\x9c\x40\x10\x84\xef\x3c\x45\x49\x7b\x0d\x1b\x61\x69\x2f\xdc\xa2\x38\x89\x2c\x25\xd6\x5e\x9c\x7b\x7b\x68\xf0\x28\xf3\x97\xe9\x66\xb3\x04\xf9\xdd\xa3\xd9\x5f\x36\xf6\x9c\x80\xaa\xaf\xa7\xa6\x80\xba\xae\xab\x15\x3c\x7b\x43\xe6\x85\x3b\x74\x9c\x5c\x9c\x3c\x07\xc5\x28\xdc\xe1\x79\xc2\x57\x37\xee\xa1\x11\x07\x47\xb5\x82\x89\x41\xc9\x06\xce\xb0\x9e\x06\x86\x67\xa5\x8e\x94\xd6\x15\x25\xfb\x93\xb3\xd8\x18\x5a\x50\x4a\xf2\x71\xd7\x54\xbf\x6c\xe8\x5a\xdc\x5f\xc6\x56\x67\x7b\x5b\x01\x81\x3c\xb7\xd7\xdd\xe7\x19\xb6\xc7\xfa\x91\x3c\x4b\x22\xc3\x78\x7d\x3d\x99\x0e\xb7\x2d\xe6\xf9\x56\x9d\x67\x70\xe8\x8a\x4d\x12\x9b\x32\x31\x73\x72\xd6\x90\xb4\x68\x2a\x40\xd8\xb1\xd1\x98\x8b\x02\x78\x52\xf3\xf2\x9d\x9e\xd9\xc9\xf1\xc1\x9b\x00\x15\xa0\xec\x93\x23\xe5\x13\xb2\x08\x5b\x96\xbb\xa1\xdf\xe3\x81\x73\x94\xb2\x2e\x5d\x5d\x98\xfa\x5d\xa6\xac\x43\x9b\x0b\xa1\x6d\xd6\x9b\x75\xb3\xb9\xd5\xb7\xa3\x73\xdb\xe8\xac\x99\x5a\x3c\xf4\x8f\x51\xb7\x99\xa5\xd4\x7a\x76\x51\x1e\x16\xf9\x6a\xd4\x1e\x9b\xe6\x0e\xc0\x0a\x3f\x68\x6f\xfd\xe8\xcb\x0e\x31\x4f\xe5\x95\x8e\xc2\x1f\x60\x03\x3c\x0f\xf4\x3c\x29\xcb\x12\x7c\xc0\xc6\xe3\x06\x14\xfb\x97\xd1\xc7\x8c\x18\x18\x56\xd9\x2f\xed\x09\x4d\x73\xd7\x34\x58\xe1\x9e\x7b\x1a\x9d\x22\xc5\x7c\xcd\xb5\x2a\x9e\xdd\xee\x78\xf9\x14\x4c\xf4\x87\x8f\x4c\x23\x06\x56\xb8\x38\x08\x62\x0f\x26\xf3\x82\xcc\xbf\x47\x16\x05\x85\x0e\x99\x25\xc5\x20\xbc\xbe\x0c\x2a\x53\x6f\x4e\x78\xec\xd3\x38\xcb\x41\xaf\x07\x58\x74\xbf\x8d\x59\xdb\x63\xba\x8b\x2c\x6c\xc6\x6c\x75\xfa\x1c\x83\xf2\x5e\xdb\x05\x97\xc7\xf0\x49\x9e\x84\xf3\xff\xcc\x49\xfa\x96\xe3\x98\xde\x6a\xe4\x5c\xfc\xb3\xcd\x76\x67\x1d\x0f\xfc\x45\x0c\x39\xd2\xc3\xaf\xd0\x93\x13\xae\xfe\x05\x00\x00\xff\xff\x5d\x9a\x63\xab\x6a\x03\x00\x00"),
		},
		"/memcache-svc.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "memcache-svc.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 206,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8c\x3d\x0e\x02\x21\x10\x46\x7b\x4e\xf1\x5d\x00\x13\x2c\x39\x84\x8d\x89\xfd\x04\x3e\x23\x51\x58\x02\x64\x9b\xc9\xde\xdd\xb0\x6b\xe3\x76\xf3\xf3\xde\xb3\xd6\x1a\xa9\xe9\xc1\xd6\xd3\x52\x3c\x56\x67\xde\xa9\x44\x8f\x3b\xdb\x9a\x02\x4d\xe6\x90\x28\x43\xbc\x01\x8a\x64\x7a\x64\xe6\x20\xe1\xc5\xa8\x8a\xf4\xc4\xe5\x26\x99\xbd\x4a\x20\xb6\xed\x07\xed\xab\x87\xea\xff\x57\x15\x2c\x71\x62\xbd\x32\xcc\x62\x5d\xda\xe8\x73\x00\xec\x39\xbf\x5f\x0f\xc4\xc3\xb9\xab\x73\x06\xe8\xfc\x30\x8c\xa5\x1d\xce\xd9\xf8\x06\x00\x00\xff\xff\x20\x2f\xef\xba\xce\x00\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/flux-account.yaml.tmpl"].(os.FileInfo),
		fs["/flux-config.yaml.tmpl"].(os.FileInfo),
		fs["/flux-deployment.yaml.tmpl"].(os.FileInfo),
		fs["/flux-secret.yaml.tmpl"].(os.FileInfo),
		fs["/memcache-dep.yaml.tmpl"].(os.FileInfo),
		fs["/memcache-svc.yaml.tmpl"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
